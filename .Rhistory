N=1113,  # sample size
mu.beta=0,  # priors centered on 0
tau.beta=1)  # diffuse priors
parnames <- c( "beta1","beta2","beta3","beta4","beta5","beta6","alpha1","alpha2","alpha3","alpha4","alpha5","alpha6","pp")
mod <- jags(data = forJags,
parameters.to.save=parnames,
n.chains = 3, n.burnin = 1500, n.iter =1500 + 1000, n.thin = 10, model.file = textConnection(model))
mcmc.array <- mod$BUGSoutput$sims.array
#hist(c(mcmc.array[,,"beta[1]"]), freq = F, main = "", xlab ="Intercept")
#hist(c(mcmc.array[,,"beta[2]"]), freq = F, main = "", xlab ="Slope")
print ("Effect of Handgun")
print (quantile(mcmc.array[,,"beta1"],c(.025,.975)))
print ("Effect of Rifle")
print (quantile(mcmc.array[,,"beta2"],c(.025,.975)))
mcmc.array[,,"pp"]
mcmc.array[,,"alpha1"]
mcmc.array[,,"pp"]
library(rjags)
library(R2jags)
model <- "model {
## Likelihood
for(i in 1:N){
y[i] ~ dpois(lambda.hacked[i])
lambda.hacked[i] <- lambda[i]*(1-zero[i]) + 1e-10*zero[i]
lambda[i] <- exp(mu.count[i])
mu.count[i] <- beta1*x1[i] +beta2*x2[i] + beta3*x3[i] + beta4  + beta5*race[i] + beta6*age[i]
## Zero-Inflation
zero[i] ~ dbern(pi[i])
pi[i] <- ilogit(mu.binary[i])
mu.binary[i] <- alpha1*x1[i] +alpha2*x2[i] + alpha3*x3[i] + alpha4  + alpha5*race[i] + alpha6*age[i]
}
for(i in 1:N){
pp[i] ~ dpois(lambda.hacked[i])
}
## Priors
beta1 ~ dnorm(mu.beta,tau.beta)
beta2 ~ dnorm(mu.beta,tau.beta)
beta3 ~ dnorm(mu.beta,tau.beta)
beta4 ~ dnorm(mu.beta,tau.beta)
beta5 ~ dnorm(mu.beta,tau.beta)
beta6 ~ dnorm(mu.beta,tau.beta)
alpha1 ~ dnorm(mu.beta,tau.beta)
alpha2 ~ dnorm(mu.beta,tau.beta)
alpha3 ~ dnorm(mu.beta,tau.beta)
alpha4 ~ dnorm(mu.beta,tau.beta)
alpha5 ~ dnorm(mu.beta,tau.beta)
alpha6 ~ dnorm(mu.beta,tau.beta)
}"
dat <- data.frame(x=type_of_gun,y=number_of_victims)
forJags <- list(x1=dat$x.1,
x2=dat$x.2,
x3=dat$x.3,
x4=dat$x.4,
age = age,
race = race,# predictors
y=dat$y,
N=1113,  # sample size
mu.beta=0,  # priors centered on 0
tau.beta=1)  # diffuse priors
parnames <- c( "beta1","beta2","beta3","beta4","beta5","beta6","alpha1","alpha2","alpha3","alpha4","alpha5","alpha6","pp")
mod <- jags(data = forJags,
parameters.to.save=parnames,
n.chains = 3, n.burnin = 1500, n.iter =1500 + 1000, n.thin = 10, model.file = textConnection(model))
mcmc.array <- mod$BUGSoutput$sims.array
#hist(c(mcmc.array[,,"beta[1]"]), freq = F, main = "", xlab ="Intercept")
#hist(c(mcmc.array[,,"beta[2]"]), freq = F, main = "", xlab ="Slope")
print ("Effect of Handgun")
print (quantile(mcmc.array[,,"beta1"],c(.025,.975)))
print ("Effect of Rifle")
print (quantile(mcmc.array[,,"beta2"],c(.025,.975)))
mcmc.array[,,"pp"]
library(rjags)
library(R2jags)
model <- "model {
## Likelihood
for(i in 1:N){
y[i] ~ dpois(lambda.hacked[i])
lambda.hacked[i] <- lambda[i]*(1-zero[i]) + 1e-10*zero[i]
lambda[i] <- exp(mu.count[i])
mu.count[i] <- beta1*x1[i] +beta2*x2[i] + beta3*x3[i] + beta4  + beta5*race[i] + beta6*age[i]
## Zero-Inflation
zero[i] ~ dbern(pi[i])
pi[i] <- ilogit(mu.binary[i])
mu.binary[i] <- alpha1*x1[i] +alpha2*x2[i] + alpha3*x3[i] + alpha4  + alpha5*race[i] + alpha6*age[i]
}
for(i in 1:N){
pp[i] ~ dpois(lambda.hacked[i])
}
## Priors
beta1 ~ dnorm(mu.beta,tau.beta)
beta2 ~ dnorm(mu.beta,tau.beta)
beta3 ~ dnorm(mu.beta,tau.beta)
beta4 ~ dnorm(mu.beta,tau.beta)
beta5 ~ dnorm(mu.beta,tau.beta)
beta6 ~ dnorm(mu.beta,tau.beta)
alpha1 ~ dnorm(mu.beta,tau.beta)
alpha2 ~ dnorm(mu.beta,tau.beta)
alpha3 ~ dnorm(mu.beta,tau.beta)
alpha4 ~ dnorm(mu.beta,tau.beta)
alpha5 ~ dnorm(mu.beta,tau.beta)
alpha6 ~ dnorm(mu.beta,tau.beta)
}"
dat <- data.frame(x=type_of_gun,y=number_of_victims)
forJags <- list(x1=dat$x.1,
x2=dat$x.2,
x3=dat$x.3,
x4=dat$x.4,
age = age,
race = race,# predictors
y=dat$y,
N=1113,  # sample size
mu.beta=0,  # priors centered on 0
tau.beta=1)  # diffuse priors
parnames <- c( "beta1","beta2","beta3","beta4","beta5","beta6","alpha1","alpha2","alpha3","alpha4","alpha5","alpha6","pp")
mod <- jags(data = forJags,
parameters.to.save=parnames,
n.chains = 3, n.burnin = 1500, n.iter =1500 + 1000, n.thin = 10, model.file = textConnection(model))
mcmc.array <- mod$BUGSoutput$sims.array
#hist(c(mcmc.array[,,"beta[1]"]), freq = F, main = "", xlab ="Intercept")
#hist(c(mcmc.array[,,"beta[2]"]), freq = F, main = "", xlab ="Slope")
print ("Effect of Handgun")
print (quantile(mcmc.array[,,"beta1"],c(.025,.975)))
print ("Effect of Rifle")
print (quantile(mcmc.array[,,"beta2"],c(.025,.975)))
mcmc.array[,,"pp"]
mcmc.array[,,"beta1"]
mcmc.array[,,"lambda"]
mcmc.array[,,"lambda.hacked"]
library(rjags)
library(R2jags)
model <- "model {
## Likelihood
for(i in 1:N){
y[i] ~ dpois(lambda.hacked[i])
lambda.hacked[i] <- lambda[i]*(1-zero[i]) + 1e-10*zero[i]
lambda[i] <- exp(mu.count[i])
mu.count[i] <- beta1*x1[i] +beta2*x2[i] + beta3*x3[i] + beta4  + beta5*race[i] + beta6*age[i]
## Zero-Inflation
zero[i] ~ dbern(pi[i])
pi[i] <- ilogit(mu.binary[i])
mu.binary[i] <- alpha1*x1[i] +alpha2*x2[i] + alpha3*x3[i] + alpha4  + alpha5*race[i] + alpha6*age[i]
}
for(i in 1:N){
pp[i] ~ dpois(lambda.hacked[i])
}
## Priors
beta1 ~ dnorm(mu.beta,tau.beta)
beta2 ~ dnorm(mu.beta,tau.beta)
beta3 ~ dnorm(mu.beta,tau.beta)
beta4 ~ dnorm(mu.beta,tau.beta)
beta5 ~ dnorm(mu.beta,tau.beta)
beta6 ~ dnorm(mu.beta,tau.beta)
alpha1 ~ dnorm(mu.beta,tau.beta)
alpha2 ~ dnorm(mu.beta,tau.beta)
alpha3 ~ dnorm(mu.beta,tau.beta)
alpha4 ~ dnorm(mu.beta,tau.beta)
alpha5 ~ dnorm(mu.beta,tau.beta)
alpha6 ~ dnorm(mu.beta,tau.beta)
}"
dat <- data.frame(x=type_of_gun,y=number_of_victims)
forJags <- list(x1=dat$x.1,
x2=dat$x.2,
x3=dat$x.3,
x4=dat$x.4,
age = age,
race = race,# predictors
y=dat$y,
N=1113,  # sample size
mu.beta=0,  # priors centered on 0
tau.beta=1)  # diffuse priors
parnames <- c( "beta1","beta2","beta3","beta4","beta5","beta6","alpha1","alpha2","alpha3","alpha4","alpha5","alpha6","lambda.hacked")
mod <- jags(data = forJags,
parameters.to.save=parnames,
n.chains = 3, n.burnin = 1500, n.iter =1500 + 1000, n.thin = 10, model.file = textConnection(model))
mcmc.array <- mod$BUGSoutput$sims.array
#hist(c(mcmc.array[,,"beta[1]"]), freq = F, main = "", xlab ="Intercept")
#hist(c(mcmc.array[,,"beta[2]"]), freq = F, main = "", xlab ="Slope")
print ("Effect of Handgun")
print (quantile(mcmc.array[,,"beta1"],c(.025,.975)))
print ("Effect of Rifle")
print (quantile(mcmc.array[,,"beta2"],c(.025,.975)))
mcmc.array[,,"lambda.hacked"]
library(rjags)
library(R2jags)
model <- "model {
## Likelihood
for(i in 1:N){
y[i] ~ dpois(lambda.hacked[i])
lambda.hacked[i] <- lambda[i]*(1-zero[i]) + 1e-10*zero[i]
lambda[i] <- exp(mu.count[i])
mu.count[i] <- beta1*x1[i] +beta2*x2[i] + beta3*x3[i] + beta4  + beta5*race[i] + beta6*age[i]
## Zero-Inflation
zero[i] ~ dbern(pi[i])
pi[i] <- ilogit(mu.binary[i])
mu.binary[i] <- alpha1*x1[i] +alpha2*x2[i] + alpha3*x3[i] + alpha4  + alpha5*race[i] + alpha6*age[i]
}
for(i in 1:N){
pp[i] ~ dpois(plambda.hacked[i])
plambda.hacked[i] <- plambda[i]*(1-zero[i]) + 1e-10*zero[i]
plambda[i] <- exp(pmu.count[i])
pmu.count[i] <- beta1*x1[i] +beta2*x2[i] + beta3*x3[i] + beta4  + beta5*race[i] + beta6*age[i]
## Zero-Inflation
zero[i] ~ dbern(ppi[i])
ppi[i] <- ilogit(pmu.binary[i])
pmu.binary[i] <- alpha1*x1[i] +alpha2*x2[i] + alpha3*x3[i] + alpha4  + alpha5*race[i] + alpha6*age[i]
}
## Priors
beta1 ~ dnorm(mu.beta,tau.beta)
beta2 ~ dnorm(mu.beta,tau.beta)
beta3 ~ dnorm(mu.beta,tau.beta)
beta4 ~ dnorm(mu.beta,tau.beta)
beta5 ~ dnorm(mu.beta,tau.beta)
beta6 ~ dnorm(mu.beta,tau.beta)
alpha1 ~ dnorm(mu.beta,tau.beta)
alpha2 ~ dnorm(mu.beta,tau.beta)
alpha3 ~ dnorm(mu.beta,tau.beta)
alpha4 ~ dnorm(mu.beta,tau.beta)
alpha5 ~ dnorm(mu.beta,tau.beta)
alpha6 ~ dnorm(mu.beta,tau.beta)
}"
dat <- data.frame(x=type_of_gun,y=number_of_victims)
forJags <- list(x1=dat$x.1,
x2=dat$x.2,
x3=dat$x.3,
x4=dat$x.4,
age = age,
race = race,# predictors
y=dat$y,
N=1113,  # sample size
mu.beta=0,  # priors centered on 0
tau.beta=1)  # diffuse priors
parnames <- c( "beta1","beta2","beta3","beta4","beta5","beta6","alpha1","alpha2","alpha3","alpha4","alpha5","alpha6","pp")
mod <- jags(data = forJags,
parameters.to.save=parnames,
n.chains = 3, n.burnin = 1500, n.iter =1500 + 1000, n.thin = 10, model.file = textConnection(model))
mcmc.array <- mod$BUGSoutput$sims.array
#hist(c(mcmc.array[,,"beta[1]"]), freq = F, main = "", xlab ="Intercept")
#hist(c(mcmc.array[,,"beta[2]"]), freq = F, main = "", xlab ="Slope")
print ("Effect of Handgun")
print (quantile(mcmc.array[,,"beta1"],c(.025,.975)))
print ("Effect of Rifle")
print (quantile(mcmc.array[,,"beta2"],c(.025,.975)))
library(rjags)
library(R2jags)
model <- "model {
## Likelihood
for(i in 1:N){
y[i] ~ dpois(lambda.hacked[i])
lambda.hacked[i] <- lambda[i]*(1-zero[i]) + 1e-10*zero[i]
lambda[i] <- exp(mu.count[i])
mu.count[i] <- beta1*x1[i] +beta2*x2[i] + beta3*x3[i] + beta4  + beta5*race[i] + beta6*age[i]
## Zero-Inflation
zero[i] ~ dbern(pi[i])
pi[i] <- ilogit(mu.binary[i])
mu.binary[i] <- alpha1*x1[i] +alpha2*x2[i] + alpha3*x3[i] + alpha4  + alpha5*race[i] + alpha6*age[i]
}
for(i in 1:N){
pp[i] ~ dpois(plambda.hacked[i])
plambda.hacked[i] <- plambda[i]*(1-zero[i]) + 1e-10*zero[i]
plambda[i] <- exp(pmu.count[i])
pmu.count[i] <- beta1*x1[i] +beta2*x2[i] + beta3*x3[i] + beta4  + beta5*race[i] + beta6*age[i]
## Zero-Inflation
pzero[i] ~ dbern(ppi[i])
ppi[i] <- ilogit(pmu.binary[i])
pmu.binary[i] <- alpha1*x1[i] +alpha2*x2[i] + alpha3*x3[i] + alpha4  + alpha5*race[i] + alpha6*age[i]
}
## Priors
beta1 ~ dnorm(mu.beta,tau.beta)
beta2 ~ dnorm(mu.beta,tau.beta)
beta3 ~ dnorm(mu.beta,tau.beta)
beta4 ~ dnorm(mu.beta,tau.beta)
beta5 ~ dnorm(mu.beta,tau.beta)
beta6 ~ dnorm(mu.beta,tau.beta)
alpha1 ~ dnorm(mu.beta,tau.beta)
alpha2 ~ dnorm(mu.beta,tau.beta)
alpha3 ~ dnorm(mu.beta,tau.beta)
alpha4 ~ dnorm(mu.beta,tau.beta)
alpha5 ~ dnorm(mu.beta,tau.beta)
alpha6 ~ dnorm(mu.beta,tau.beta)
}"
dat <- data.frame(x=type_of_gun,y=number_of_victims)
forJags <- list(x1=dat$x.1,
x2=dat$x.2,
x3=dat$x.3,
x4=dat$x.4,
age = age,
race = race,# predictors
y=dat$y,
N=1113,  # sample size
mu.beta=0,  # priors centered on 0
tau.beta=1)  # diffuse priors
parnames <- c( "beta1","beta2","beta3","beta4","beta5","beta6","alpha1","alpha2","alpha3","alpha4","alpha5","alpha6","pp")
mod <- jags(data = forJags,
parameters.to.save=parnames,
n.chains = 3, n.burnin = 1500, n.iter =1500 + 1000, n.thin = 10, model.file = textConnection(model))
mcmc.array <- mod$BUGSoutput$sims.array
#hist(c(mcmc.array[,,"beta[1]"]), freq = F, main = "", xlab ="Intercept")
#hist(c(mcmc.array[,,"beta[2]"]), freq = F, main = "", xlab ="Slope")
print ("Effect of Handgun")
print (quantile(mcmc.array[,,"beta1"],c(.025,.975)))
print ("Effect of Rifle")
print (quantile(mcmc.array[,,"beta2"],c(.025,.975)))
mcmc.array[,,"pp"]
mcmc.array[,,"pp[1]"]
ppd <- c()
for (i in 1:length(dat$x.1)){
ppd <- c(mcmc.array[,,paste(paste("pp[",i),"]")])
}
mcmc.array[,,"pp[1]"]paste(paste("pp[",i),"]")
paste(paste("pp[",i),"]")
ppd <- c()
for (i in 1:length(dat$x.1)){
ppd <- c(mcmc.array[,,paste(paste("pp[",i,sep=""),"]",sep="")])
}
ppd
mcmc.array[,,"pp[1000]"]
ppd <- c()
for (i in 1:length(dat$x.1)){
ppd <- c(mcmc.array[,,paste(paste("pp[",i,sep=""),"]",sep="")])
}
ppd
length(ppd)
mcmc.array[,,"pp[300]"]
mcmc.array[,,"pp[301]"]
mcmc.array[,,"pp[302]"]
mcmc.array[,,"pp[299]"]
ppd <- c()
for (i in 1:length(dat$x.1)){
ppd <- c(ppd,mcmc.array[,,paste(paste("pp[",i,sep=""),"]",sep="")])
}
ppd
ppd <- c()
for (i in 1:length(dat$x.1)){
ppd <- c(ppd,mcmc.array[,,paste(paste("pp[",i,sep=""),"]",sep="")][1])
}
ppd
length(ppd)
ppd <- c()
for (i in 1:length(dat$x.1)){
ppd <- c(ppd,mcmc.array[,,paste(paste("pp[",i,sep=""),"]",sep="")][1])
}
plot(ppd-dat$y)
#setwd("/Users/gcgibson/BayesProject/")
shootingsafter <- read.csv("/Users/gcgibson/BayesProject/ShootingsAfter1991.csv")
moreshootings <- read.csv("/Users/gcgibson/BayesProject/Shootings2016.csv")
write.csv(rbind(shootingsafter,moreshootings), "AllShootings.csv")
allshootings <- read.csv("/Users/gcgibson/BayesProject/AllShootings.csv")
ames.data <- allshootings$Victim.s..Deceased..at.school.
number_of_victims <-c()
s <- c()
for (i in 1:length(ames.data)){
if (is.na(ames.data[i])){
#print ("hello")
number_of_victims <- c(number_of_victims,0)
} else if (ames.data[i] == "None"){
number_of_victims <- c(number_of_victims,0)
} else{
number_of_victims <- c(number_of_victims,ames.data[i])
}
}
plot(1:length(number_of_victims),number_of_victims)
ggplot(allshootings, aes(x=allshootings$year,y = allshootings$Victim.s..Deceased..at.school.)) + geom_point() + labs(title = "Number of Victims over Time", y="Number of Victims", x="Year")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
type_of_gun <- matrix(0,nrow=length(number_of_victims),ncol=4)
tmp <- allshootings$Weapon.s..Categories
for (i in 1:length(tmp)){
if (tmp[i] == "Handgun"){
type_of_gun[i,1] =  1
} else if (tmp[i] == "Rifle"){
type_of_gun[i,2] =  1
}  else if (tmp[i] == "Shotgun"){
type_of_gun[i,3] =  1
}  else {
type_of_gun[i,4] =  1
}
}
#setwd("/Users/gcgibson/BayesProject/")
shootingsafter <- read.csv("/Users/gcgibson/BayesProject/ShootingsAfter1991.csv")
moreshootings <- read.csv("/Users/gcgibson/BayesProject/Shootings2016.csv")
write.csv(rbind(shootingsafter,moreshootings), "AllShootings.csv")
allshootings <- read.csv("/Users/gcgibson/BayesProject/AllShootings.csv")
ames.data <- allshootings$Victim.s..Deceased..at.school.
number_of_victims <-c()
s <- c()
for (i in 1:length(ames.data)){
if (is.na(ames.data[i])){
#print ("hello")
number_of_victims <- c(number_of_victims,0)
} else if (ames.data[i] == "None"){
number_of_victims <- c(number_of_victims,0)
} else{
number_of_victims <- c(number_of_victims,ames.data[i])
}
}
plot(1:length(number_of_victims),number_of_victims)
ggplot(allshootings, aes(x=allshootings$Date,y = allshootings$Victim.s..Deceased..at.school.)) + geom_point() + labs(title = "Number of Victims over Time", y="Number of Victims", x="Year")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
type_of_gun <- matrix(0,nrow=length(number_of_victims),ncol=4)
tmp <- allshootings$Weapon.s..Categories
for (i in 1:length(tmp)){
if (tmp[i] == "Handgun"){
type_of_gun[i,1] =  1
} else if (tmp[i] == "Rifle"){
type_of_gun[i,2] =  1
}  else if (tmp[i] == "Shotgun"){
type_of_gun[i,3] =  1
}  else {
type_of_gun[i,4] =  1
}
}
#setwd("/Users/gcgibson/BayesProject/")
shootingsafter <- read.csv("/Users/gcgibson/BayesProject/ShootingsAfter1991.csv")
moreshootings <- read.csv("/Users/gcgibson/BayesProject/Shootings2016.csv")
write.csv(rbind(shootingsafter,moreshootings), "AllShootings.csv")
allshootings <- read.csv("/Users/gcgibson/BayesProject/AllShootings.csv")
ames.data <- allshootings$Victim.s..Deceased..at.school.
number_of_victims <-c()
s <- c()
for (i in 1:length(ames.data)){
if (is.na(ames.data[i])){
#print ("hello")
number_of_victims <- c(number_of_victims,0)
} else if (ames.data[i] == "None"){
number_of_victims <- c(number_of_victims,0)
} else{
number_of_victims <- c(number_of_victims,ames.data[i])
}
}
allshootings$number_of_victims <- number_of_victims
plot(1:length(number_of_victims),number_of_victims)
ggplot(allshootings, aes(x=allshootings$Date,y = allshootings$number_of_victims)) + geom_point() + labs(title = "Number of Victims over Time", y="Number of Victims", x="Year")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
type_of_gun <- matrix(0,nrow=length(number_of_victims),ncol=4)
tmp <- allshootings$Weapon.s..Categories
for (i in 1:length(tmp)){
if (tmp[i] == "Handgun"){
type_of_gun[i,1] =  1
} else if (tmp[i] == "Rifle"){
type_of_gun[i,2] =  1
}  else if (tmp[i] == "Shotgun"){
type_of_gun[i,3] =  1
}  else {
type_of_gun[i,4] =  1
}
}
#setwd("/Users/gcgibson/BayesProject/")
shootingsafter <- read.csv("/Users/gcgibson/BayesProject/ShootingsAfter1991.csv")
moreshootings <- read.csv("/Users/gcgibson/BayesProject/Shootings2016.csv")
write.csv(rbind(shootingsafter,moreshootings), "AllShootings.csv")
allshootings <- read.csv("/Users/gcgibson/BayesProject/AllShootings.csv")
ames.data <- allshootings$Victim.s..Deceased..at.school.
number_of_victims <-c()
s <- c()
for (i in 1:length(ames.data)){
if (is.na(ames.data[i])){
#print ("hello")
number_of_victims <- c(number_of_victims,0)
} else if (ames.data[i] == "None"){
number_of_victims <- c(number_of_victims,0)
} else{
number_of_victims <- c(number_of_victims,ames.data[i])
}
}
allshootings$number_of_victims <- number_of_victims
plot(1:length(number_of_victims),number_of_victims)
ggplot(allshootings, aes(x=allshootings$Date,y = allshootings$number_of_victims)) + geom_point() + labs(title = "Number of Victims over Time", y="Number of Victims", x="Year")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#setwd("/Users/gcgibson/BayesProject/")
shootingsafter <- read.csv("/Users/gcgibson/BayesProject/ShootingsAfter1991.csv")
moreshootings <- read.csv("/Users/gcgibson/BayesProject/Shootings2016.csv")
write.csv(rbind(shootingsafter,moreshootings), "AllShootings.csv")
allshootings <- read.csv("/Users/gcgibson/BayesProject/AllShootings.csv")
ames.data <- allshootings$Victim.s..Deceased..at.school.
number_of_victims <-c()
s <- c()
for (i in 1:length(ames.data)){
if (is.na(ames.data[i])){
#print ("hello")
number_of_victims <- c(number_of_victims,0)
} else if (ames.data[i] == "None"){
number_of_victims <- c(number_of_victims,0)
} else{
number_of_victims <- c(number_of_victims,ames.data[i])
}
}
allshootings$number_of_victims <- number_of_victims
plot(1:length(number_of_victims),number_of_victims)
ggplot(allshootings, aes(x=allshootings$Date,y = allshootings$number_of_victims)) + geom_point() + labs(title = "Number of Victims over Time", y="Number of Victims", x="Year")  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
type_of_gun <- matrix(0,nrow=length(number_of_victims),ncol=4)
tmp <- allshootings$Weapon.s..Categories
for (i in 1:length(tmp)){
if (tmp[i] == "Handgun"){
type_of_gun[i,1] =  1
} else if (tmp[i] == "Rifle"){
type_of_gun[i,2] =  1
}  else if (tmp[i] == "Shotgun"){
type_of_gun[i,3] =  1
}  else {
type_of_gun[i,4] =  1
}
}
allshootings$Date
ugh <- (1,4,3,2,19,9)
ugh <- c(1,4,3,2,19,9)
pred1 <- forecast(arima(ts(ugh, frequency =26), c(1,0,0)), h=26)$mean
library(forecast)
pred1 <- forecast(arima(ts(ugh, frequency =26), c(1,0,0)), h=26)$mean
pred1
plot(pred1)
pred1 <- forecast(arima(ts(ugh, frequency =26), c(.5,0,0)), h=26)$mean
plot(pred1)
pred1
pred1 <- forecast(arima(ts(ugh, frequency =26), c(1,0,0)), h=26)$mean
pred1
arima(ts(ugh, frequency =26), c(1,0,0)), h=26)
arima(ts(ugh, frequency =26), c(1,0,0))
